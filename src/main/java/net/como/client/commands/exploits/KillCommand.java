package net.como.client.commands.exploits;

import java.util.ArrayList;
import java.util.List;

import net.como.client.ComoClient;
import net.como.client.commands.structures.Command;
import net.como.client.utils.ChatUtils;
import net.como.client.utils.InteractionUtils;
import net.como.client.utils.NbtUtils;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.PlayerEntity;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Items;
import net.minecraft.nbt.StringNbtReader;
import net.minecraft.util.Hand;
import net.minecraft.util.math.Vec3d;

public class KillCommand extends Command {
    private static Vec3d DEFAULT_OFFSET = new Vec3d(0, 2.1d, 0);
    private static int DEFAULT_ATTEMPTS = 3;

    public KillCommand() {
        super("kill", "kill <player> <attempts> <offset x> <offset y> <offset z>", "Kills a player on the server that is in render distance");
    }

    @Override
    public boolean shouldShowHelp(String[] args) {
        return args.length != 1 && args.length != 5 && args.length != 2;
    }

    private ItemStack createPotion(Vec3d pos) {
        // Create the potion
        ItemStack stack = new ItemStack(Items.BAT_SPAWN_EGG);

        // Create the nbt
        try {
            stack.setNbt(StringNbtReader.parse(
                "{EntityTag:{Item:{Count:1b,id:\"minecraft:splash_potion\",tag:{CustomPotionEffects:[{ShowParticles:1b,Duration:20,Id:6b,Amplifier:125b}],Potion:\"minecraft:awkward\"}},Pos:[" + pos.x + "d," + pos.y + "d," + pos.z + "d],Motion:[0d,0d,0d],id:\"minecraft:potion\",LeftOwner:1b}}"
            ));
        } catch (Exception e) {
            e.printStackTrace();
            return null;
        }

        return stack;
    }

    private void kill(PlayerEntity player, Vec3d offset) {
        Vec3d pos = player.getLerpedPos(1).add(offset);

        // Create the potion
        ItemStack stack = createPotion(pos);

        // Spawn the potion
        NbtUtils.giveItem(stack, false);

        // Throw the potion
        InteractionUtils.fireActive(Hand.MAIN_HAND);

        // Remove the potion
        NbtUtils.giveItem(new ItemStack(Items.AIR), false);
    }

    @Override
    public Boolean trigger(String[] args) {
        if (this.handleHelp(args)) return true;

        String playerName = args[0];

        PlayerEntity target = null;
        for (PlayerEntity player : ComoClient.getClient().world.getPlayers()) {
            if (!player.getEntityName().equalsIgnoreCase(playerName)) continue;

            target = player;
            break;
        }

        if (target == null) {
            this.displayChatMessage("%sPlayer not found.", ChatUtils.RED);
            return true;
        }

        // Check for the number of attempts
        int attempts = DEFAULT_ATTEMPTS;

        if (args.length >= 2) {
            try {
                attempts = Integer.parseInt(args[1]);
            } catch (Exception e) {
                this.displayChatMessage("%sInvalid number of attempts.", ChatUtils.RED);
                return true;
            }

            // Make sure that it is 1 or more
            if (attempts < 1) {
                this.displayChatMessage("%sInvalid number of attempts.", ChatUtils.RED);
                return true;
            }
        }

        // Offset
        Vec3d offset = DEFAULT_OFFSET;

        // Check if we have been given an offset
        if (args.length == 5) {
            try {
                double x = Double.parseDouble(args[2]);
                double y = Double.parseDouble(args[3]);
                double z = Double.parseDouble(args[4]);

                offset = new Vec3d(x, y, z);
            } catch (NumberFormatException e) {
                this.displayChatMessage("%sInvalid offset.", ChatUtils.RED);
            }
        }

        // Kill the player
        this.attemptKillThreaded(target, offset, attempts);

        return true;
    }

    private void attemptKillThreaded(PlayerEntity target, Vec3d offset, int attempts) {
        // Create a thread to kill the player
        new Thread(() -> {
            this.attemptKill(target, attempts, offset);
        }).start();
    }

    private void attemptKill(PlayerEntity target, int attempts, Vec3d offset) {
        // Kill and try multiple times in different locations
        for (int i = 0; i < attempts && target.isAlive(); i++) {
            Vec3d curOffset = offset.add(
                target.getVelocity().multiply(i)
            );

            // Attempt to kill
            kill(target, curOffset);
        }

        this.displayChatMessage("Payload sent!");
    }

    @Override
    public List<String> getSuggestions() {
        List<String> suggestions = new ArrayList<String>();

        for (Entity player : ComoClient.getClient().world.getPlayers()) {
            suggestions.add(player.getEntityName());
        }

        return suggestions;
    }
}
